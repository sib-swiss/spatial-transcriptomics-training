[
  {
    "objectID": "quality_control.html",
    "href": "quality_control.html",
    "title": "Mapping + counting (spaceranger)",
    "section": "",
    "text": "we downloaded the data from https://www.10xgenomics.com/datasets/fresh-frozen-visium-on-cytassist-mouse-brain-probe-based-whole-transcriptome-profiling-2-standard\nFresh Frozen Visium on CytAssist: Mouse Brain, Probe-Based Whole Transcriptome Profiling\n\nlibrary(Seurat)\nlibrary(umap)\nlibrary(ggpubr)\n\n\n\nSpecify input directories and files.\n\ncountFolder &lt;- \"raw_data\"\nanalysisFolder &lt;- \"analysis\"\nname1 &lt;- \"Anterior\"\nname2 &lt;- \"Posterior\"\ndir.create(analysisFolder, showWarnings = FALSE)\n\nLoad data into an seurat object\n\nseu1 &lt;- Load10X_Spatial(file.path(countFolder, name1),\n                        filename = \"filtered_feature_bc_matrix.h5\", slice = name1\n)\nseu2 &lt;- Load10X_Spatial(file.path(countFolder, name2),\n                        filename = \"filtered_feature_bc_matrix.h5\", slice = name2\n)\n\n\n\n\n\n\nA high number of detected genes can potentially indicate doublets. However, depending on the celltype composition in your sample, it may also reflect true biological variation among cell types.\nnCount_Spatial: total number of counts for a spot (i.e. library size)\nnFeature_Spatial: total number of genes expressed in a spot\n\nFeatureScatter(seu1,\n               feature1 = \"nCount_Spatial\",\n               feature2 = \"nFeature_Spatial\"\n) +\n  labs(title = name1) +\n  NoLegend()\n\n\n\n\n\n\n\nVlnPlot(seu1,\n        features = \"nFeature_Spatial\"\n) +\n  labs(title = name1, y = \"nFeature_Spatial\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nFeatureScatter(seu2,\n               feature1 = \"nCount_Spatial\",\n               feature2 = \"nFeature_Spatial\"\n) +\n  labs(title = name2) +\n  NoLegend()\n\n\n\n\n\n\n\nVlnPlot(seu2,\n        features = \"nFeature_Spatial\"\n) +\n  labs(title = name2, y = \"nFeature_Spatial\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\n\n\n\nLow quality/dying cells often exhibit extensive mitochondrial contamination. Spots with a high proportion of mitochondrial reads will be removed.\n\nseu1 &lt;- PercentageFeatureSet(seu1,\n                             pattern = \"^MT-|^Mt-|^mt-\",\n                             col.name = \"percent.mt\"\n)\n\nVlnPlot(seu1, features = \"percent.mt\") +\n  labs(title = name1, y = \"percent of mitochondrial reads\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu1, features = \"percent.mt\") + labs(title = name1)\n\n\n\n\n\n\n\nseu2 &lt;- PercentageFeatureSet(seu2,\n                             pattern = \"^MT-|^Mt-|^mt-\",\n                             col.name = \"percent.mt\"\n)\n\nVlnPlot(seu2, features = \"percent.mt\") +\n  labs(title = name2, y = \"percent of mitochondrial reads\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu2, features = \"percent.mt\") + labs(title = name2)\n\n\n\n\n\n\n\n\n\n\n\nThe fraction of reads from ribosomal proteins varies based on cell type and overall cell health. Higher levels of RNA degradation may lead to more templating of ribosomal proteins.\n\nseu1 &lt;- PercentageFeatureSet(seu1,\n                             pattern = \"^RP[SL]|^MRP[SL]|^Rp[sl]|^Mrp[sl]|^rp[sl]|^mrp[sl]\",\n                             col.name = \"percent.rp\"\n)\n\nVlnPlot(seu1, features = \"percent.rp\") +\n  labs(title = name1, y = \"percent of ribosomal reads\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu1, features = \"percent.rp\") + labs(title = name1)\n\n\n\n\n\n\n\nseu2 &lt;- PercentageFeatureSet(seu2,\n                             pattern = \"^RP[SL]|^MRP[SL]|^Rp[sl]|^Mrp[sl]|^rp[sl]|^mrp[sl]\",\n                             col.name = \"percent.rp\"\n)\n\nVlnPlot(seu2, features = \"percent.rp\") +\n  labs(title = name2, y = \"percent of ribosomal reads\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu2, features = \"percent.rp\") + labs(title = name2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRemove spots with less than 500 unique feature counts remove spots with &gt;=32% mitocondrial counts\nYou must judge for yourself based on your knowledge of the tissue and the above graphics.\n\nseu.filt1 &lt;- seu1[, seu1$nFeature_Spatial &gt; 500 & seu1$percent.mt &lt; 32]\n\nWarning: Not validating Seurat objects\n\nseu.filt2 &lt;- seu2[, seu2$nFeature_Spatial &gt; 500 & seu2$percent.mt &lt; 32]\n\nWarning: Not validating Seurat objects\n\n\n\n\n\nPlots showing the top 30 most highly expressed genes in each sample. Each row corresponds to a gene, and each boxplot corresponds to the expression of a gene (i.e. number of reads) in a single spot. The vertical line in the box indicates the median expression of each gene across all spots. Genes are sorted in decreasing order based on median expression.\nSometimes individual genes may have very high expression and should be removed to avoid problems at the normalization step. In particular, look out for MALAT1 and other nuclear lincRNAs, mitochondrial genes (prefix mt-), ribosomal proteins (starting with rp), actin and hemoglobin.\n\nC &lt;- seu.filt1[[\"Spatial\"]]$counts\nC@x &lt;- C@x / rep.int(colSums(C), diff(C@p))\nmost_expressed &lt;- order(Matrix::rowSums(C), decreasing = TRUE)[30:1]\n\nas.matrix(C[most_expressed, ]) |&gt;\n  t() |&gt;\n  as.matrix() |&gt;\n  boxplot(\n    cex.axis = 0.5,\n    cex.lab = 0.8,\n    cex = 0.1,\n    las = 1,\n    xlab = \"% total count per cell\",\n    col = (scales::hue_pal())(30)[30:1],\n    horizontal = TRUE\n  )\n\n\n\n\n\n\n\nC &lt;- seu.filt2[[\"Spatial\"]]$counts\nC@x &lt;- C@x / rep.int(colSums(C), diff(C@p))\nmost_expressed &lt;- order(Matrix::rowSums(C), decreasing = TRUE)[30:1]\n\nas.matrix(C[most_expressed, ]) |&gt;\n  t() |&gt;\n  as.matrix() |&gt;\n  boxplot(\n    cex.axis = 0.5,\n    cex.lab = 0.8,\n    cex = 0.1,\n    las = 1,\n    xlab = \"% total count per cell\",\n    col = (scales::hue_pal())(30)[30:1],\n    horizontal = TRUE\n  )\n\n\n\n\n\n\n\n\n\nremove_genes &lt;- c(\"mt-Co3\", \"mt-Co1\",\n                  \"mt-Atp6\", \"mt-Cytb\",\n                  \"mt-Co2\", \"mt-Nd4\",\n                  \"mt-Nd2\", \"mt-Nd1\")\n\n\nremove_feature &lt;- rownames(seu.filt1) %in% remove_genes\nseu.filt1 &lt;- seu.filt1[!remove_feature, ]\n\nWarning: Not validating Seurat objects\n\nremove_feature &lt;- rownames(seu.filt2) %in% remove_genes\nseu.filt2 &lt;- seu.filt2[!remove_feature, ]\n\nWarning: Not validating Seurat objects\n\n\n\n\n\n\nstats &lt;- c(dim(seu1)[2], dim(seu.filt1)[2])\nstats &lt;- rbind(stats, c(dim(seu2)[2], dim(seu.filt2)[2]))\ncolnames(stats) &lt;- c(\"Before filtering\", \"After filtering\")\nrownames(stats) &lt;- c(name1, name2)\nstats \n\n          Before filtering After filtering\nAnterior              3293            3280\nPosterior             2825            2798\n\n\n\n\n\n\nFeatureScatter(seu.filt1, \n               feature1 = \"nCount_Spatial\", \n               feature2 = \"nFeature_Spatial\") + \n  labs(title = name1) +\n  NoLegend() \n\n\n\n\n\n\n\nVlnPlot(seu.filt1, features = \"nFeature_Spatial\")  + \n  labs(title = name1, y = \"nFeature_Spatial\", x = \"\") + \n  NoLegend() \n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nFeatureScatter(seu.filt2,\n               feature1 = \"nCount_Spatial\",\n               feature2 = \"nFeature_Spatial\") +\n  labs(title = name2) +\n  NoLegend() \n\n\n\n\n\n\n\nVlnPlot(seu.filt2, features = \"nFeature_Spatial\")  + \n  labs(title = name2, y = \"nFeature_Spatial\", x = \"\") +\n  NoLegend() \n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBiological heterogeneity in spatial RNA-seq data is often confounded by technical factors including sequencing depth. The number of molecules detected in each spot can vary significantly between spots, even within the same celltype. Note that the variance in molecular counts/spot can be substantial for spatial datasets, particularly if there are differences in cell density across the tissue.\nTherefore, we apply sctransform normalization (Hafemeister and Satija, Genome Biology 2019), which builds regularized negative binomial models of gene expression in order to account for technical artifacts while preserving biological variance. During the normalization, we also remove confounding sources of variation (mitochondrial and ribosomal mapping percentage).\n\n\n\nVlnPlot(seu.filt1, features = \"nCount_Spatial\", pt.size = 0.1) + \n  labs(title=name1, y=\"nCount_Spatial\", x=\"\") + \n  NoLegend() \n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu.filt1, features = \"nCount_Spatial\") + \n  labs(title = name1) +\n  theme(legend.position = \"right\")\n\n\n\n\n\n\n\nVlnPlot(seu.filt2, features = \"nCount_Spatial\", pt.size = 0.1) + \n  labs(title=name2, y=\"nCount_Spatial\", x=\"\") + \n  NoLegend() \n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu.filt2, features = \"nCount_Spatial\") + \n  labs(title = name2) + \n  theme(legend.position = \"right\")\n\n\n\n\n\n\n\n\n\n\n\nApply sctransform normalization: - Transformed data will be available in the SCT assay, which is set as the default after running sctransform - During normalization, we can also remove confounding sources of variation, for example, mitochondrial mapping percentage\n\nseu.norm1 &lt;- SCTransform(\n  seu.filt1,\n  assay = \"Spatial\",\n  vars.to.regress = c(\"percent.mt\", \"percent.rp\"),\n  verbose = FALSE\n)\n\nWarning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by\n'DelayedArray::makeNindexFromArrayViewport' when loading 'SummarizedExperiment'\n\nseu.norm2 &lt;-\n  SCTransform(\n    seu.filt2,\n    assay = \"Spatial\",\n    vars.to.regress = c(\"percent.mt\", \"percent.rp\"),\n    verbose = FALSE\n  )\n\nsaveRDS(seu.norm1,\n        paste0(analysisFolder, \"/normalized_\", name1, \".rds\"))\nsaveRDS(seu.norm2,\n        paste0(analysisFolder, \"/normalized_\", name2, \".rds\"))\n\nVlnPlot(seu.norm1, features = \"nCount_SCT\", pt.size = 0.1) +\n  labs(title =\n         name1, y = \"nCount_Spatial\", x = \"\") +\n  NoLegend()\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu.norm1, features = \"nCount_SCT\") +\n  labs(title = name1) +\n  theme(legend.position = \"right\")\n\n\n\n\n\n\n\nVlnPlot(seu.norm2, features = \"nCount_SCT\", pt.size = 0.1) +\n  labs(title =\n         name2, y = \"nCount_Spatial\", x = \"\") +\n  NoLegend()\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu.norm2, features = \"nCount_SCT\") +\n  labs(title = name2) +\n  theme(legend.position = \"right\")"
  },
  {
    "objectID": "quality_control.html#setup",
    "href": "quality_control.html#setup",
    "title": "Mapping + counting (spaceranger)",
    "section": "",
    "text": "Specify input directories and files.\n\ncountFolder &lt;- \"raw_data\"\nanalysisFolder &lt;- \"analysis\"\nname1 &lt;- \"Anterior\"\nname2 &lt;- \"Posterior\"\ndir.create(analysisFolder, showWarnings = FALSE)\n\nLoad data into an seurat object\n\nseu1 &lt;- Load10X_Spatial(file.path(countFolder, name1),\n                        filename = \"filtered_feature_bc_matrix.h5\", slice = name1\n)\nseu2 &lt;- Load10X_Spatial(file.path(countFolder, name2),\n                        filename = \"filtered_feature_bc_matrix.h5\", slice = name2\n)"
  },
  {
    "objectID": "quality_control.html#quality-control",
    "href": "quality_control.html#quality-control",
    "title": "Mapping + counting (spaceranger)",
    "section": "",
    "text": "A high number of detected genes can potentially indicate doublets. However, depending on the celltype composition in your sample, it may also reflect true biological variation among cell types.\nnCount_Spatial: total number of counts for a spot (i.e. library size)\nnFeature_Spatial: total number of genes expressed in a spot\n\nFeatureScatter(seu1,\n               feature1 = \"nCount_Spatial\",\n               feature2 = \"nFeature_Spatial\"\n) +\n  labs(title = name1) +\n  NoLegend()\n\n\n\n\n\n\n\nVlnPlot(seu1,\n        features = \"nFeature_Spatial\"\n) +\n  labs(title = name1, y = \"nFeature_Spatial\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nFeatureScatter(seu2,\n               feature1 = \"nCount_Spatial\",\n               feature2 = \"nFeature_Spatial\"\n) +\n  labs(title = name2) +\n  NoLegend()\n\n\n\n\n\n\n\nVlnPlot(seu2,\n        features = \"nFeature_Spatial\"\n) +\n  labs(title = name2, y = \"nFeature_Spatial\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\n\n\n\nLow quality/dying cells often exhibit extensive mitochondrial contamination. Spots with a high proportion of mitochondrial reads will be removed.\n\nseu1 &lt;- PercentageFeatureSet(seu1,\n                             pattern = \"^MT-|^Mt-|^mt-\",\n                             col.name = \"percent.mt\"\n)\n\nVlnPlot(seu1, features = \"percent.mt\") +\n  labs(title = name1, y = \"percent of mitochondrial reads\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu1, features = \"percent.mt\") + labs(title = name1)\n\n\n\n\n\n\n\nseu2 &lt;- PercentageFeatureSet(seu2,\n                             pattern = \"^MT-|^Mt-|^mt-\",\n                             col.name = \"percent.mt\"\n)\n\nVlnPlot(seu2, features = \"percent.mt\") +\n  labs(title = name2, y = \"percent of mitochondrial reads\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu2, features = \"percent.mt\") + labs(title = name2)\n\n\n\n\n\n\n\n\n\n\n\nThe fraction of reads from ribosomal proteins varies based on cell type and overall cell health. Higher levels of RNA degradation may lead to more templating of ribosomal proteins.\n\nseu1 &lt;- PercentageFeatureSet(seu1,\n                             pattern = \"^RP[SL]|^MRP[SL]|^Rp[sl]|^Mrp[sl]|^rp[sl]|^mrp[sl]\",\n                             col.name = \"percent.rp\"\n)\n\nVlnPlot(seu1, features = \"percent.rp\") +\n  labs(title = name1, y = \"percent of ribosomal reads\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu1, features = \"percent.rp\") + labs(title = name1)\n\n\n\n\n\n\n\nseu2 &lt;- PercentageFeatureSet(seu2,\n                             pattern = \"^RP[SL]|^MRP[SL]|^Rp[sl]|^Mrp[sl]|^rp[sl]|^mrp[sl]\",\n                             col.name = \"percent.rp\"\n)\n\nVlnPlot(seu2, features = \"percent.rp\") +\n  labs(title = name2, y = \"percent of ribosomal reads\", x = \"\") +\n  NoLegend()\n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu2, features = \"percent.rp\") + labs(title = name2)"
  },
  {
    "objectID": "quality_control.html#filtering",
    "href": "quality_control.html#filtering",
    "title": "Mapping + counting (spaceranger)",
    "section": "",
    "text": "Remove spots with less than 500 unique feature counts remove spots with &gt;=32% mitocondrial counts\nYou must judge for yourself based on your knowledge of the tissue and the above graphics.\n\nseu.filt1 &lt;- seu1[, seu1$nFeature_Spatial &gt; 500 & seu1$percent.mt &lt; 32]\n\nWarning: Not validating Seurat objects\n\nseu.filt2 &lt;- seu2[, seu2$nFeature_Spatial &gt; 500 & seu2$percent.mt &lt; 32]\n\nWarning: Not validating Seurat objects\n\n\n\n\n\nPlots showing the top 30 most highly expressed genes in each sample. Each row corresponds to a gene, and each boxplot corresponds to the expression of a gene (i.e. number of reads) in a single spot. The vertical line in the box indicates the median expression of each gene across all spots. Genes are sorted in decreasing order based on median expression.\nSometimes individual genes may have very high expression and should be removed to avoid problems at the normalization step. In particular, look out for MALAT1 and other nuclear lincRNAs, mitochondrial genes (prefix mt-), ribosomal proteins (starting with rp), actin and hemoglobin.\n\nC &lt;- seu.filt1[[\"Spatial\"]]$counts\nC@x &lt;- C@x / rep.int(colSums(C), diff(C@p))\nmost_expressed &lt;- order(Matrix::rowSums(C), decreasing = TRUE)[30:1]\n\nas.matrix(C[most_expressed, ]) |&gt;\n  t() |&gt;\n  as.matrix() |&gt;\n  boxplot(\n    cex.axis = 0.5,\n    cex.lab = 0.8,\n    cex = 0.1,\n    las = 1,\n    xlab = \"% total count per cell\",\n    col = (scales::hue_pal())(30)[30:1],\n    horizontal = TRUE\n  )\n\n\n\n\n\n\n\nC &lt;- seu.filt2[[\"Spatial\"]]$counts\nC@x &lt;- C@x / rep.int(colSums(C), diff(C@p))\nmost_expressed &lt;- order(Matrix::rowSums(C), decreasing = TRUE)[30:1]\n\nas.matrix(C[most_expressed, ]) |&gt;\n  t() |&gt;\n  as.matrix() |&gt;\n  boxplot(\n    cex.axis = 0.5,\n    cex.lab = 0.8,\n    cex = 0.1,\n    las = 1,\n    xlab = \"% total count per cell\",\n    col = (scales::hue_pal())(30)[30:1],\n    horizontal = TRUE\n  )\n\n\n\n\n\n\n\n\n\nremove_genes &lt;- c(\"mt-Co3\", \"mt-Co1\",\n                  \"mt-Atp6\", \"mt-Cytb\",\n                  \"mt-Co2\", \"mt-Nd4\",\n                  \"mt-Nd2\", \"mt-Nd1\")\n\n\nremove_feature &lt;- rownames(seu.filt1) %in% remove_genes\nseu.filt1 &lt;- seu.filt1[!remove_feature, ]\n\nWarning: Not validating Seurat objects\n\nremove_feature &lt;- rownames(seu.filt2) %in% remove_genes\nseu.filt2 &lt;- seu.filt2[!remove_feature, ]\n\nWarning: Not validating Seurat objects\n\n\n\n\n\n\nstats &lt;- c(dim(seu1)[2], dim(seu.filt1)[2])\nstats &lt;- rbind(stats, c(dim(seu2)[2], dim(seu.filt2)[2]))\ncolnames(stats) &lt;- c(\"Before filtering\", \"After filtering\")\nrownames(stats) &lt;- c(name1, name2)\nstats \n\n          Before filtering After filtering\nAnterior              3293            3280\nPosterior             2825            2798\n\n\n\n\n\n\nFeatureScatter(seu.filt1, \n               feature1 = \"nCount_Spatial\", \n               feature2 = \"nFeature_Spatial\") + \n  labs(title = name1) +\n  NoLegend() \n\n\n\n\n\n\n\nVlnPlot(seu.filt1, features = \"nFeature_Spatial\")  + \n  labs(title = name1, y = \"nFeature_Spatial\", x = \"\") + \n  NoLegend() \n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nFeatureScatter(seu.filt2,\n               feature1 = \"nCount_Spatial\",\n               feature2 = \"nFeature_Spatial\") +\n  labs(title = name2) +\n  NoLegend() \n\n\n\n\n\n\n\nVlnPlot(seu.filt2, features = \"nFeature_Spatial\")  + \n  labs(title = name2, y = \"nFeature_Spatial\", x = \"\") +\n  NoLegend() \n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead."
  },
  {
    "objectID": "quality_control.html#normalization",
    "href": "quality_control.html#normalization",
    "title": "Mapping + counting (spaceranger)",
    "section": "",
    "text": "Biological heterogeneity in spatial RNA-seq data is often confounded by technical factors including sequencing depth. The number of molecules detected in each spot can vary significantly between spots, even within the same celltype. Note that the variance in molecular counts/spot can be substantial for spatial datasets, particularly if there are differences in cell density across the tissue.\nTherefore, we apply sctransform normalization (Hafemeister and Satija, Genome Biology 2019), which builds regularized negative binomial models of gene expression in order to account for technical artifacts while preserving biological variance. During the normalization, we also remove confounding sources of variation (mitochondrial and ribosomal mapping percentage).\n\n\n\nVlnPlot(seu.filt1, features = \"nCount_Spatial\", pt.size = 0.1) + \n  labs(title=name1, y=\"nCount_Spatial\", x=\"\") + \n  NoLegend() \n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu.filt1, features = \"nCount_Spatial\") + \n  labs(title = name1) +\n  theme(legend.position = \"right\")\n\n\n\n\n\n\n\nVlnPlot(seu.filt2, features = \"nCount_Spatial\", pt.size = 0.1) + \n  labs(title=name2, y=\"nCount_Spatial\", x=\"\") + \n  NoLegend() \n\nWarning: Default search for \"data\" layer in \"Spatial\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu.filt2, features = \"nCount_Spatial\") + \n  labs(title = name2) + \n  theme(legend.position = \"right\")\n\n\n\n\n\n\n\n\n\n\n\nApply sctransform normalization: - Transformed data will be available in the SCT assay, which is set as the default after running sctransform - During normalization, we can also remove confounding sources of variation, for example, mitochondrial mapping percentage\n\nseu.norm1 &lt;- SCTransform(\n  seu.filt1,\n  assay = \"Spatial\",\n  vars.to.regress = c(\"percent.mt\", \"percent.rp\"),\n  verbose = FALSE\n)\n\nWarning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by\n'DelayedArray::makeNindexFromArrayViewport' when loading 'SummarizedExperiment'\n\nseu.norm2 &lt;-\n  SCTransform(\n    seu.filt2,\n    assay = \"Spatial\",\n    vars.to.regress = c(\"percent.mt\", \"percent.rp\"),\n    verbose = FALSE\n  )\n\nsaveRDS(seu.norm1,\n        paste0(analysisFolder, \"/normalized_\", name1, \".rds\"))\nsaveRDS(seu.norm2,\n        paste0(analysisFolder, \"/normalized_\", name2, \".rds\"))\n\nVlnPlot(seu.norm1, features = \"nCount_SCT\", pt.size = 0.1) +\n  labs(title =\n         name1, y = \"nCount_Spatial\", x = \"\") +\n  NoLegend()\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu.norm1, features = \"nCount_SCT\") +\n  labs(title = name1) +\n  theme(legend.position = \"right\")\n\n\n\n\n\n\n\nVlnPlot(seu.norm2, features = \"nCount_SCT\", pt.size = 0.1) +\n  labs(title =\n         name2, y = \"nCount_Spatial\", x = \"\") +\n  NoLegend()\n\n\n\n\n\n\n\nSpatialFeaturePlot(seu.norm2, features = \"nCount_SCT\") +\n  labs(title = name2) +\n  theme(legend.position = \"right\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SIB days tutorial: introduction to spatial transcriptomics",
    "section": "",
    "text": "SIB days tutorial: introduction to spatial transcriptomics\nLorem ipsum"
  }
]