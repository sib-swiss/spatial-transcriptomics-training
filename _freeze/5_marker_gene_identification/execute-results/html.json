{
  "hash": "a26498ad4f911e7d2f5ecb2ab579abf0",
  "result": {
    "markdown": "---\ntitle: \"Marker gene identification\"\nengine: knitr\n---\n\n\nWe load the required packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Seurat)\nlibrary(ggplot2)\nlibrary(clustree)\nlibrary(patchwork)\nlibrary(dplyr)\n```\n:::\n\n\nAnd we load the list created after normalization and scaling, followed by a merge:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseu <- readRDS(\"output/seu_part4.rds\")\n```\n:::\n\n\n## Marker genes\n\nFinally, we can identify marker genes for each cluster. For that, we move away from the `integrated` assay, and use `SCT` as default again. Because our object is a merge between two slices, each with their own SCT model, we need to correct the counts and data slots. This is done by `PrepSCTFindMakers`. After that, we use `FindAllMarkers` to identify markers for each cluster versus all other spots. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nDefaultAssay(seu) <- \"SCT\"\nseu <- PrepSCTFindMarkers(seu)\nall_marks <- FindAllMarkers(seu, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)\n```\n:::\n\n\n::: {.callout-important}\n## Exercise\n\nCheck out the results in `all_marks`. What is the top marker for cluster 4? \n\n::: \n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n\nHere's a oneliner for a table representation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_marks |>\n  filter(cluster == 4) |>\n  arrange(desc(avg_log2FC)) |>\n  head(5) |>\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|        | p_val| avg_log2FC| pct.1| pct.2| p_val_adj|cluster |gene   |\n|:-------|-----:|----------:|-----:|-----:|---------:|:-------|:------|\n|Ltbp2   |     0|   4.103064| 0.368| 0.030|         0|4       |Ltbp2  |\n|Cnpy11  |     0|   4.084387| 0.596| 0.097|         0|4       |Cnpy1  |\n|Cbln31  |     0|   4.075309| 0.609| 0.161|         0|4       |Cbln3  |\n|Il20rb1 |     0|   4.036047| 0.488| 0.059|         0|4       |Il20rb |\n|Gabra61 |     0|   4.031573| 0.604| 0.150|         0|4       |Gabra6 |\n:::\n:::\n\n:::\n\nTo get a broad overview of all marker genes we can do the following:\n\n-  Find the top 3 marker genes for each cluster. Here, we take an approximation of the test statistic (`avg_log2FC * -log10(p_val_adj + 1e-300)`) to sort the genes.\n- Then we create a dotplot of the expression of each gene per cluster\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_markers <- all_marks |>\n  mutate(order_value = avg_log2FC * -log10(p_val_adj + 1e-300)) |>\n  group_by(cluster) |>\n  slice_max(n = 3, order_by = order_value)\n\nDotPlot(seu, features = unique(top_markers$gene)) +\n  scale_x_discrete(guide = guide_axis(angle = 45))\n```\n\n::: {.cell-output-display}\n![](5_marker_gene_identification_files/figure-html/unnamed-chunk-5-1.png){width=864}\n:::\n:::\n\n\nNow, we can check whether the expression pattern corresponds with the cluster, e.g. the top marker of cluster 3:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSpatialDimPlot(seu, \n               cells.highlight = CellsByIdentities(object = seu,\n                                                   idents = 7)) + \n  plot_layout(guides='collect') &\n  theme(legend.position = \"none\") \n```\n\n::: {.cell-output-display}\n![](5_marker_gene_identification_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nSpatialPlot(seu,\n            features = top_markers$gene[top_markers$cluster == 7][1],\n            pt.size.factor = 2) \n```\n\n::: {.cell-output-display}\n![](5_marker_gene_identification_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\n::: {.callout-important}\n## Exercise\n\nWhat kind of tissue is cluster 7 you think? Does the mouse brain atlas show similar patterns for this gene?\n\nCompare the expression to the images at [Allen Brain Atlas](http://atlas.brain-map.org/atlas?atlas=2&plate=100883804#atlas=2&plate=100884129&resolution=19.04&x=7671.818403764205&y=4000&zoom=-4&structure=549) to figure out the tissue type.\n\nTo compare the expression, go to [mouse.brain-map.org](https://mouse.brain-map.org/), type the gene name in the search box. Select the gene entry in the sagittal plane, click 'View selections' at the left bottom of the page. Select a similar slice (i.e. in the middle of the brain).\n\n\n\n::: \n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n\nBased on the comparison of the brain atlas it seems to be layer 2/3 of the isocortex. \n\nIt has similar expression based on in-situ hybridization from the brain atlas. Also expression in the striatium and medulla correspond. \n\n![](assets/images/Lamp5_sagittal_ISH.png)\n\n:::\n\n::: {.callout-important}\n## Exercise\n\nCreate the same visualization for cluster 0. What is the top marker? Can you guess what kind of cells this tissue is mostly comprised of? \n\nThe marker is expressed in many spots, and therefore it is not part of specific cell groups. Therefore, check out the gene at e.g. wikipedia. \n\n::: \n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSpatialDimPlot(seu, \n               cells.highlight = CellsByIdentities(object = seu,\n                                                   idents = 0)) + \n  plot_layout(guides='collect') &\n  theme(legend.position = \"none\") \n```\n\n::: {.cell-output-display}\n![](5_marker_gene_identification_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nSpatialPlot(seu,\n            features = top_markers$gene[top_markers$cluster == 0][1],\n            pt.size.factor = 2) \n```\n\n::: {.cell-output-display}\n![](5_marker_gene_identification_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\nThe top gene is [Plp1](https://en.wikipedia.org/wiki/Proteolipid_protein_1) which protein is an important component of the myelin sheets of neurons. Therefore cluster 0 seems to represent the white matter of the brain. \n\n:::\n\n\n## Bonus exercise: spatially variable features\n\nIn stead of looking for features that are variable among all spots, you can also identify that mainly vary in space, i.e. while taking spot distance into account:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# take the output of part 3 (non-integrated and non-clustered)\nseu_list <- readRDS(\"output/seu_part3.rds\")\n\n# we only do Anterior for now\nDefaultAssay(seu_list$Anterior) <- \"SCT\"\n\nseu_list$Anterior <-\n  FindSpatiallyVariableFeatures(\n    seu_list$Anterior,\n    selection.method = \"moransi\",\n    features = VariableFeatures(seu_list$Anterior)\n  )\n\nspatialFeatures <-\n  SVFInfo(seu_list$Anterior, method = \"moransi\", status = TRUE)\n\nspatialFeatures <-\n  spatialFeatures |> arrange(rank)\n```\n:::\n\n\n::: {.callout-important}\n## Exercise\n\nRun the code and plot the top spatial variable genes. \n\nThe spatial features are ordered already ordered, so you can get them with e.g.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrownames(spatialFeatures)[1:4]\n```\n:::\n\n\nAny interesting marker genes in there?\n\n::: \n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSpatialPlot(seu_list$Anterior,\n            features = rownames(spatialFeatures)[1:4],\n            ncol = 2)\n```\n\n::: {.cell-output-display}\n![](5_marker_gene_identification_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}